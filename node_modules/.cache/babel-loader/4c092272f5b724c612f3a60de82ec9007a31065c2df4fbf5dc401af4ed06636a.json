{"ast":null,"code":"import { createStore } from 'vuex';\nimport { map } from '../Ymaps/ymaps.js';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    isMapLoaded: false,\n    marksConfigs: [{\n      id: 'universities',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/purpleMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'coworkings',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/yellowMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'libraries',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/yellowMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'cafe',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/yellowMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }]\n  },\n  mutations: {},\n  actions: {\n    async addMarksFromType({\n      state,\n      commit\n    }, btnId) {\n      if (!map) {\n        return;\n      }\n      ;\n      try {\n        const response = await axios.get();\n        let newCollection = new ymaps.GeoObjectCollection(null);\n        let universitiesArr = response.data;\n      } catch (e) {\n        alert(\"Ошибка\");\n      }\n\n      // let universitiesArr = [\n      //   {\n      //     name: \"ЛЭТИ\",\n      //     coordinates: [59.971942, 30.324294],\n      //   },\n      //   {\n      //     name: \"СПБГУ\",\n      //     coordinates: [59.941636, 30.299563],\n      //   },\n      //   {\n      //     name: \"БОНЧ\",\n      //     coordinates: [59.902821, 30.489175],\n      //   }\n      // ];\n\n      let config = state.marksConfigs.find(item => item.id === btnId).config;\n      for (let place of universitiesArr) {\n        newCollection.add(new ymaps.Placemark(place.coordinates, {\n          balloonContent: place.name\n        }, config));\n      }\n      map.geoObjects.add(newCollection);\n    }\n  }\n});","map":{"version":3,"names":["createStore","map","axios","state","isMapLoaded","marksConfigs","id","config","iconLayout","iconImageHref","iconImageSize","iconImageOffset","mutations","actions","addMarksFromType","commit","btnId","response","get","newCollection","ymaps","GeoObjectCollection","universitiesArr","data","e","alert","find","item","place","add","Placemark","coordinates","balloonContent","name","geoObjects"],"sources":["/home/brulik/projects/hackaton_leti2/digital_students/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport { map } from '../Ymaps/ymaps.js'\nimport axios from 'axios'\n\nexport default createStore({\n  state: {\n    isMapLoaded: false,\n    marksConfigs: [\n      {\n        id: 'universities', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/purpleMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'coworkings', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/yellowMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'libraries', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/yellowMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'cafe', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/yellowMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n    ]\n  },\n  mutations: {\n  },\n  actions: {\n    async addMarksFromType({ state, commit }, btnId) {\n        if (!map) {\n          return\n        };\n\n        try {\n          const response = await axios.get()\n\n          let newCollection = new ymaps.GeoObjectCollection(null);\n          let universitiesArr = response.data;\n\n        } catch (e) {\n          alert(\"Ошибка\")\n        }\n\n        // let universitiesArr = [\n        //   {\n        //     name: \"ЛЭТИ\",\n        //     coordinates: [59.971942, 30.324294],\n        //   },\n        //   {\n        //     name: \"СПБГУ\",\n        //     coordinates: [59.941636, 30.299563],\n        //   },\n        //   {\n        //     name: \"БОНЧ\",\n        //     coordinates: [59.902821, 30.489175],\n        //   }\n        // ];\n        \n        let config = state.marksConfigs.find(item => item.id === btnId).config;\n        \n        for(let place of universitiesArr) {\n          newCollection.add(new ymaps.Placemark(place.coordinates, {\n            balloonContent: place.name\n          }, config))\n        }\n        \n        map.geoObjects.add(newCollection);\n    },\n  },\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,GAAG,QAAQ,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeF,WAAW,CAAC;EACzBG,KAAK,EAAE;IACLC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE,CACZ;MACEC,EAAE,EAAE,cAAc;MAClBC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,YAAY;MAChBC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,WAAW;MACfC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,MAAM;MACVC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC;EAEL,CAAC;EACDC,SAAS,EAAE,CACX,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAC;MAAEX,KAAK;MAAEY;IAAO,CAAC,EAAEC,KAAK,EAAE;MAC7C,IAAI,CAACf,GAAG,EAAE;QACR;MACF;MAAC;MAED,IAAI;QACF,MAAMgB,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,CAAC;QAElC,IAAIC,aAAa,GAAG,IAAIC,KAAK,CAACC,mBAAmB,CAAC,IAAI,CAAC;QACvD,IAAIC,eAAe,GAAGL,QAAQ,CAACM,IAAI;MAErC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,KAAK,CAAC,QAAQ,CAAC;MACjB;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,IAAIlB,MAAM,GAAGJ,KAAK,CAACE,YAAY,CAACqB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACrB,EAAE,KAAKU,KAAK,CAAC,CAACT,MAAM;MAEtE,KAAI,IAAIqB,KAAK,IAAIN,eAAe,EAAE;QAChCH,aAAa,CAACU,GAAG,CAAC,IAAIT,KAAK,CAACU,SAAS,CAACF,KAAK,CAACG,WAAW,EAAE;UACvDC,cAAc,EAAEJ,KAAK,CAACK;QACxB,CAAC,EAAE1B,MAAM,CAAC,CAAC;MACb;MAEAN,GAAG,CAACiC,UAAU,CAACL,GAAG,CAACV,aAAa,CAAC;IACrC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}