{"ast":null,"code":"import { createStore } from 'vuex';\nconst ymaps = window.ymaps;\nexport default createStore({\n  state: {\n    map: null,\n    isMapLoaded: false,\n    marksConfigs: [{\n      id: 'universities',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/aquaMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40],\n        iconColor: '#ff0000'\n      }\n    }]\n  },\n  mutations: {\n    SET_MAP(state, {\n      map,\n      flag\n    }) {\n      state.map = map;\n      state.isMapLoaded = flag;\n    }\n  },\n  actions: {\n    createMap({\n      commit\n    }) {\n      ymaps.ready(() => {\n        const map = new ymaps.Map('map', {\n          center: [59.938955, 30.315644],\n          zoom: 10,\n          controls: []\n        });\n        commit('SET_MAP', {\n          map: map,\n          flag: true\n        });\n      });\n    },\n    addMarks({\n      state\n    }) {\n      ymaps.ready(() => {\n        if (!state.map) {\n          console.log(ymaps);\n          return;\n        }\n        let universitiesCollection = new ymaps.GeoObjectCollection(null);\n        let universitiesArr = [{\n          name: \"ЛЭТИ\",\n          coordinates: [59.971942, 30.324294]\n        }, {\n          name: \"СПБГУ\",\n          coordinates: [59.941636, 30.299563]\n        }, {\n          name: \"БОНЧ\",\n          coordinates: [59.902821, 30.489175]\n        }];\n        let config = state.marksConfigs.find(item => item.id === 'universities').config;\n        for (let place of universitiesArr) {\n          universitiesCollection.add(new ymaps.Placemark(place.coordinates, {\n            balloonContent: place.name\n          }, config));\n        }\n        state.map.geoObjects.add(universitiesCollection);\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","ymaps","window","state","map","isMapLoaded","marksConfigs","id","config","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconColor","mutations","SET_MAP","flag","actions","createMap","commit","ready","Map","center","zoom","controls","addMarks","console","log","universitiesCollection","GeoObjectCollection","universitiesArr","name","coordinates","find","item","place","add","Placemark","balloonContent","geoObjects"],"sources":["/home/brulik/projects/hackaton_leti2/digital_students/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nconst ymaps = window.ymaps\n\nexport default createStore({\n  state: {\n    map: null,\n    isMapLoaded: false,\n    marksConfigs: [\n      {\n        id: 'universities', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/aquaMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],\n          iconColor: '#ff0000'\n        }\n      }\n    ]\n  },\n  mutations: {\n    SET_MAP(state, { map, flag }) {\n      state.map = map;\n      state.isMapLoaded = flag;\n    },\n  },\n  actions: {\n    createMap({ commit }) {\n      ymaps.ready(() => {\n        const map = new ymaps.Map('map', {\n          center: [59.938955, 30.315644],\n          zoom: 10,\n          controls: [],\n        })\n        commit('SET_MAP', {map: map, flag: true } )\n      })\n    },\n    addMarks({ state }) {\n      ymaps.ready(() => {\n        if (!state.map) {\n          console.log(ymaps)\n          return;\n        }\n\n        let universitiesCollection = new ymaps.GeoObjectCollection(null);\n        let universitiesArr = [\n          {\n            name: \"ЛЭТИ\",\n            coordinates: [59.971942, 30.324294],\n          },\n          {\n            name: \"СПБГУ\",\n            coordinates: [59.941636, 30.299563],\n          },\n          {\n            name: \"БОНЧ\",\n            coordinates: [59.902821, 30.489175],\n          }\n        ];\n  \n        let config = state.marksConfigs.find(item => item.id === 'universities').config;\n  \n        for(let place of universitiesArr) {\n          universitiesCollection.add(new ymaps.Placemark(place.coordinates, {\n            balloonContent: place.name\n          }, config))\n        }\n  \n        state.map.geoObjects.add(universitiesCollection); \n      })\n    },\n  },\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,MAAMC,KAAK,GAAGC,MAAM,CAACD,KAAK;AAE1B,eAAeD,WAAW,CAAC;EACzBG,KAAK,EAAE;IACLC,GAAG,EAAE,IAAI;IACTC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE,CACZ;MACEC,EAAE,EAAE,cAAc;MAClBC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,0BAA0B;QACzCC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QAC3BC,SAAS,EAAE;MACb;IACF,CAAC;EAEL,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACZ,KAAK,EAAE;MAAEC,GAAG;MAAEY;IAAK,CAAC,EAAE;MAC5Bb,KAAK,CAACC,GAAG,GAAGA,GAAG;MACfD,KAAK,CAACE,WAAW,GAAGW,IAAI;IAC1B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACpBlB,KAAK,CAACmB,KAAK,CAAC,MAAM;QAChB,MAAMhB,GAAG,GAAG,IAAIH,KAAK,CAACoB,GAAG,CAAC,KAAK,EAAE;UAC/BC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC9BC,IAAI,EAAE,EAAE;UACRC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFL,MAAM,CAAC,SAAS,EAAE;UAACf,GAAG,EAAEA,GAAG;UAAEY,IAAI,EAAE;QAAK,CAAE,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC;IACDS,QAAQA,CAAC;MAAEtB;IAAM,CAAC,EAAE;MAClBF,KAAK,CAACmB,KAAK,CAAC,MAAM;QAChB,IAAI,CAACjB,KAAK,CAACC,GAAG,EAAE;UACdsB,OAAO,CAACC,GAAG,CAAC1B,KAAK,CAAC;UAClB;QACF;QAEA,IAAI2B,sBAAsB,GAAG,IAAI3B,KAAK,CAAC4B,mBAAmB,CAAC,IAAI,CAAC;QAChE,IAAIC,eAAe,GAAG,CACpB;UACEC,IAAI,EAAE,MAAM;UACZC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS;QACpC,CAAC,EACD;UACED,IAAI,EAAE,OAAO;UACbC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS;QACpC,CAAC,EACD;UACED,IAAI,EAAE,MAAM;UACZC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS;QACpC,CAAC,CACF;QAED,IAAIxB,MAAM,GAAGL,KAAK,CAACG,YAAY,CAAC2B,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC3B,EAAE,KAAK,cAAc,CAAC,CAACC,MAAM;QAE/E,KAAI,IAAI2B,KAAK,IAAIL,eAAe,EAAE;UAChCF,sBAAsB,CAACQ,GAAG,CAAC,IAAInC,KAAK,CAACoC,SAAS,CAACF,KAAK,CAACH,WAAW,EAAE;YAChEM,cAAc,EAAEH,KAAK,CAACJ;UACxB,CAAC,EAAEvB,MAAM,CAAC,CAAC;QACb;QAEAL,KAAK,CAACC,GAAG,CAACmC,UAAU,CAACH,GAAG,CAACR,sBAAsB,CAAC;MAClD,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}