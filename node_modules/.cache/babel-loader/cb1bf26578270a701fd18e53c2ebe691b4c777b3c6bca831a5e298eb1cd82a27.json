{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport { map } from '../Ymaps/ymaps.js';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    universities: [],\n    placesArr: [],\n    coords: [],\n    marksConfigs: [{\n      id: 'Коворкинг',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/yellowMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'ВУЗ',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/purpleMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'Библиотека',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/aquaMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'Кафе',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/orangeMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'Музей',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/greenMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'ownUniversity',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/whiteMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }, {\n      id: 'findedPlaces',\n      config: {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/whiteMark.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40]\n      }\n    }]\n  },\n  getters: {\n    getCoords(state) {\n      return state.coords;\n    }\n  },\n  mutations: {\n    SET_COORDS(state, coords) {\n      state.coords = coords;\n    }\n  },\n  actions: {\n    async addMarksFromType({\n      state,\n      commit\n    }, btnId) {\n      if (!map) {\n        return;\n      }\n      ;\n      try {\n        const response = await axios.get(`http://194.87.248.192:8001/point/category/${btnId}`);\n        let newCollection = new ymaps.GeoObjectCollection(null);\n        state.placesArr = response.data;\n        let config = state.marksConfigs.find(item => item.id === btnId).config;\n        console.log(state.placesArr);\n        for (let place of state.placesArr) {\n          newCollection.add(new ymaps.Placemark((() => {\n            if (btnId === 'ВУЗ' || btnId === 'Музей') {\n              return place.coords;\n            }\n            return place.coords.reverse();\n          })(), {\n            balloonContentHeader: place.name,\n            balloonContentBody: place.address\n          }, config));\n        }\n        ;\n        map.geoObjects.removeAll();\n        map.geoObjects.add(newCollection);\n      } catch (e) {\n        alert(\"Ошибка\");\n      }\n    },\n    async loadUniversities({\n      state\n    }) {\n      try {\n        const response = await axios.get(`http://194.87.248.192:8001/point/category/ВУЗ`);\n        state.universities = response.data.sort((universityFirst, universitySecond) => universityFirst.name.localeCompare(universitySecond.name));\n      } catch (e) {\n        alert(\"Не удалось загрузить университеты\");\n      }\n    },\n    async loadCoordsByAdress({\n      state,\n      commit\n    }, addressArray) {\n      state.coords = [];\n      for (let address of addressArray) {\n        try {\n          const geocoder = await axios.get(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=ae41d663-6a01-4379-a21a-0eb098b48a57&geocode=${address}`);\n          let featureMember = geocoder.data.response.GeoObjectCollection.featureMember;\n          state.coords.push(featureMember[0].GeoObject.Point.pos.split(' ').reverse());\n          commit(\"SET_COORDS\", state.coords);\n        } catch {\n          alert(\"Ошибка геокодирования\");\n        }\n      }\n    },\n    async findPlaceByNameAndAddress({\n      state\n    }, str) {\n      try {\n        const response = await axios.get(`http://194.87.248.192:8001/point/search?search_query=${str}`);\n        let places = response.data;\n        console.log(places);\n        for (let place of places) {\n          map.geoObjects.add(new ymaps.Placemark(place.coords), {\n            balloonContentHeader: place.name,\n            balloonContentBody: place.address\n          }, state.marksConfigs.find(config => config.id === \"findedPlaces\"));\n        }\n      } catch {\n        alert(\"Ошибка поиска\");\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","map","axios","state","universities","placesArr","coords","marksConfigs","id","config","iconLayout","iconImageHref","iconImageSize","iconImageOffset","getters","getCoords","mutations","SET_COORDS","actions","addMarksFromType","commit","btnId","response","get","newCollection","ymaps","GeoObjectCollection","data","find","item","console","log","place","add","Placemark","reverse","balloonContentHeader","name","balloonContentBody","address","geoObjects","removeAll","e","alert","loadUniversities","sort","universityFirst","universitySecond","localeCompare","loadCoordsByAdress","addressArray","geocoder","featureMember","push","GeoObject","Point","pos","split","findPlaceByNameAndAddress","str","places"],"sources":["/home/brulik/projects/hackaton_leti2/digital_students/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport { map } from '../Ymaps/ymaps.js'\nimport axios from 'axios'\n\nexport default createStore({\n  state: {\n    universities: [],\n    placesArr: [],\n    coords: [],\n    marksConfigs: [\n      {\n        id: 'Коворкинг', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/yellowMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'ВУЗ', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/purpleMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'Библиотека', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/aquaMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'Кафе', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/orangeMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'Музей', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/greenMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'ownUniversity', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/whiteMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n      {\n        id: 'findedPlaces', \n        config: {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/whiteMark.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],  \n        }\n      },\n    ]\n  },\n  getters: {\n    getCoords(state) {\n      return state.coords\n    }\n  },\n  mutations: {\n    SET_COORDS(state, coords) {\n      state.coords = coords;\n    }\n  },\n  actions: {\n    async addMarksFromType({ state, commit }, btnId) {\n        if (!map) {\n          return\n        };\n\n        try {\n          const response = await axios.get(`http://194.87.248.192:8001/point/category/${btnId}`);\n          let newCollection = new ymaps.GeoObjectCollection(null);\n          state.placesArr = response.data;\n\n          let config = state.marksConfigs.find(item => item.id === btnId).config;\n\n          console.log(state.placesArr)\n\n          for(let place of state.placesArr) {\n            newCollection.add(new ymaps.Placemark((() => {\n              if(btnId === 'ВУЗ' || btnId === 'Музей') {\n                return place.coords;\n              }\n              return place.coords.reverse();\n            })(), {\n              balloonContentHeader: place.name,\n              balloonContentBody: place.address,\n            }, config))\n          };\n\n          map.geoObjects.removeAll();\n          map.geoObjects.add(newCollection);\n        } catch(e) {\n          alert(\"Ошибка\")\n        }\n    },\n    async loadUniversities({ state }) {\n      try {\n        const response = await axios.get(`http://194.87.248.192:8001/point/category/ВУЗ`);\n        state.universities = response.data.sort((universityFirst, universitySecond) => universityFirst.name.localeCompare(universitySecond.name));\n      } catch(e) {\n        alert(\"Не удалось загрузить университеты\")\n      }\n    },\n    async loadCoordsByAdress({ state, commit }, addressArray) {\n      state.coords = [];\n      for (let address of addressArray) {\n        try {\n          const geocoder = await axios.get(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=ae41d663-6a01-4379-a21a-0eb098b48a57&geocode=${address}`);\n          let featureMember = geocoder.data.response.GeoObjectCollection.featureMember;\n          state.coords.push(featureMember[0].GeoObject.Point.pos.split(' ').reverse());\n          commit(\"SET_COORDS\", state.coords)\n        } catch {\n          alert(\"Ошибка геокодирования\")\n        }\n      }\n    },\n    async findPlaceByNameAndAddress({ state }, str) {\n      try {\n        const response = await axios.get(`http://194.87.248.192:8001/point/search?search_query=${str}`);\n        let places = response.data;\n        console.log(places)\n        for (let place of places) {\n          map.geoObjects.add(new ymaps.Placemark(place.coords), {\n            balloonContentHeader: place.name,\n            balloonContentBody: place.address,\n          }, state.marksConfigs.find(config => config.id === \"findedPlaces\"))\n        }\n\n      } catch {\n        alert(\"Ошибка поиска\");\n      }\n    }\n  },\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,GAAG,QAAQ,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeF,WAAW,CAAC;EACzBG,KAAK,EAAE;IACLC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CACZ;MACEC,EAAE,EAAE,WAAW;MACfC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,KAAK;MACTC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,YAAY;MAChBC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,0BAA0B;QACzCC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,MAAM;MACVC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,4BAA4B;QAC3CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,OAAO;MACXC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,2BAA2B;QAC1CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,eAAe;MACnBC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,2BAA2B;QAC1CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC,EACD;MACEL,EAAE,EAAE,cAAc;MAClBC,MAAM,EAAE;QACNC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,2BAA2B;QAC1CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5B;IACF,CAAC;EAEL,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACZ,KAAK,EAAE;MACf,OAAOA,KAAK,CAACG,MAAM;IACrB;EACF,CAAC;EACDU,SAAS,EAAE;IACTC,UAAUA,CAACd,KAAK,EAAEG,MAAM,EAAE;MACxBH,KAAK,CAACG,MAAM,GAAGA,MAAM;IACvB;EACF,CAAC;EACDY,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAC;MAAEhB,KAAK;MAAEiB;IAAO,CAAC,EAAEC,KAAK,EAAE;MAC7C,IAAI,CAACpB,GAAG,EAAE;QACR;MACF;MAAC;MAED,IAAI;QACF,MAAMqB,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,6CAA4CF,KAAM,EAAC,CAAC;QACtF,IAAIG,aAAa,GAAG,IAAIC,KAAK,CAACC,mBAAmB,CAAC,IAAI,CAAC;QACvDvB,KAAK,CAACE,SAAS,GAAGiB,QAAQ,CAACK,IAAI;QAE/B,IAAIlB,MAAM,GAAGN,KAAK,CAACI,YAAY,CAACqB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACrB,EAAE,KAAKa,KAAK,CAAC,CAACZ,MAAM;QAEtEqB,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAACE,SAAS,CAAC;QAE5B,KAAI,IAAI2B,KAAK,IAAI7B,KAAK,CAACE,SAAS,EAAE;UAChCmB,aAAa,CAACS,GAAG,CAAC,IAAIR,KAAK,CAACS,SAAS,CAAC,CAAC,MAAM;YAC3C,IAAGb,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,OAAO,EAAE;cACvC,OAAOW,KAAK,CAAC1B,MAAM;YACrB;YACA,OAAO0B,KAAK,CAAC1B,MAAM,CAAC6B,OAAO,CAAC,CAAC;UAC/B,CAAC,EAAE,CAAC,EAAE;YACJC,oBAAoB,EAAEJ,KAAK,CAACK,IAAI;YAChCC,kBAAkB,EAAEN,KAAK,CAACO;UAC5B,CAAC,EAAE9B,MAAM,CAAC,CAAC;QACb;QAAC;QAEDR,GAAG,CAACuC,UAAU,CAACC,SAAS,CAAC,CAAC;QAC1BxC,GAAG,CAACuC,UAAU,CAACP,GAAG,CAACT,aAAa,CAAC;MACnC,CAAC,CAAC,OAAMkB,CAAC,EAAE;QACTC,KAAK,CAAC,QAAQ,CAAC;MACjB;IACJ,CAAC;IACD,MAAMC,gBAAgBA,CAAC;MAAEzC;IAAM,CAAC,EAAE;MAChC,IAAI;QACF,MAAMmB,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,+CAA8C,CAAC;QACjFpB,KAAK,CAACC,YAAY,GAAGkB,QAAQ,CAACK,IAAI,CAACkB,IAAI,CAAC,CAACC,eAAe,EAAEC,gBAAgB,KAAKD,eAAe,CAACT,IAAI,CAACW,aAAa,CAACD,gBAAgB,CAACV,IAAI,CAAC,CAAC;MAC3I,CAAC,CAAC,OAAMK,CAAC,EAAE;QACTC,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC;IACD,MAAMM,kBAAkBA,CAAC;MAAE9C,KAAK;MAAEiB;IAAO,CAAC,EAAE8B,YAAY,EAAE;MACxD/C,KAAK,CAACG,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIiC,OAAO,IAAIW,YAAY,EAAE;QAChC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMjD,KAAK,CAACqB,GAAG,CAAE,uGAAsGgB,OAAQ,EAAC,CAAC;UAClJ,IAAIa,aAAa,GAAGD,QAAQ,CAACxB,IAAI,CAACL,QAAQ,CAACI,mBAAmB,CAAC0B,aAAa;UAC5EjD,KAAK,CAACG,MAAM,CAAC+C,IAAI,CAACD,aAAa,CAAC,CAAC,CAAC,CAACE,SAAS,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACtB,OAAO,CAAC,CAAC,CAAC;UAC5Ef,MAAM,CAAC,YAAY,EAAEjB,KAAK,CAACG,MAAM,CAAC;QACpC,CAAC,CAAC,MAAM;UACNqC,KAAK,CAAC,uBAAuB,CAAC;QAChC;MACF;IACF,CAAC;IACD,MAAMe,yBAAyBA,CAAC;MAAEvD;IAAM,CAAC,EAAEwD,GAAG,EAAE;MAC9C,IAAI;QACF,MAAMrC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,wDAAuDoC,GAAI,EAAC,CAAC;QAC/F,IAAIC,MAAM,GAAGtC,QAAQ,CAACK,IAAI;QAC1BG,OAAO,CAACC,GAAG,CAAC6B,MAAM,CAAC;QACnB,KAAK,IAAI5B,KAAK,IAAI4B,MAAM,EAAE;UACxB3D,GAAG,CAACuC,UAAU,CAACP,GAAG,CAAC,IAAIR,KAAK,CAACS,SAAS,CAACF,KAAK,CAAC1B,MAAM,CAAC,EAAE;YACpD8B,oBAAoB,EAAEJ,KAAK,CAACK,IAAI;YAChCC,kBAAkB,EAAEN,KAAK,CAACO;UAC5B,CAAC,EAAEpC,KAAK,CAACI,YAAY,CAACqB,IAAI,CAACnB,MAAM,IAAIA,MAAM,CAACD,EAAE,KAAK,cAAc,CAAC,CAAC;QACrE;MAEF,CAAC,CAAC,MAAM;QACNmC,KAAK,CAAC,eAAe,CAAC;MACxB;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}