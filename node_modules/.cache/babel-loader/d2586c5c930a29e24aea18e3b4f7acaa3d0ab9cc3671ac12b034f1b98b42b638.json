{"ast":null,"code":"import CustomInput from \"@/components/ui/CustomInput.vue\";\nimport CustomSelect from \"@/components/ui/CustomSelect.vue\";\nimport CustomFilterBtn from \"@/components/ui/CustomFilterBtn.vue\";\nexport default {\n  name: 'MenuLeft',\n  data() {\n    return {\n      menuList: [{\n        imgPath: '/menuImages/universImg.svg',\n        description: 'ВУЗы',\n        backgroundColor: 'rgb(183, 116, 245)'\n      }, {\n        imgPath: '/menuImages/kovorkingImg.svg',\n        description: 'Коворкинги',\n        backgroundColor: 'rgb(253, 253, 22)'\n      }, {\n        imgPath: '/menuImages/biblioteki.svg',\n        description: 'Библиотеки',\n        backgroundColor: 'rgb(105, 250, 255)'\n      }, {\n        imgPath: '/menuImages/kafe.svg',\n        description: 'Кафе',\n        backgroundColor: 'rgb(235, 125, 0)'\n      }]\n    };\n  },\n  components: {\n    CustomFilterBtn,\n    CustomSelect,\n    CustomInput\n  },\n  methods: {\n    addMark() {\n      let universitiesCollection = new ymaps.GeoObjectCollection(null);\n      let universitiesMarkConfig = {\n        iconLayout: 'default#image',\n        iconImageHref: '/placeMarks/purpleSVG.svg',\n        iconImageSize: [55, 55],\n        iconImageOffset: [-30, -40],\n        iconColor: '#ff0000'\n      };\n      let universitiesArr = [{\n        name: \"ЛЭТИ\",\n        coordinates: [59.971942, 30.324294]\n      }, {\n        name: \"СПБГУ\",\n        coordinates: [59.941636, 30.299563]\n      }, {\n        name: \"БОНЧ\",\n        coordinates: [59.902821, 30.489175]\n      }];\n      for (let place of universitiesArr) {\n        universitiesCollection.add(new ymaps.Placemark(place.coordinates, {\n          balloonContent: place.name\n        }, universitiesMarkConfig));\n      }\n\n      // let myPlacemark = new ymaps.Placemark([59.971942, 30.324294],{\n      //   balloonContent: 'ЛЭТИ',\n      // }, universitiesMarkConfig)\n\n      map.geoObjects.add(universitiesCollection);\n    }\n  }\n};","map":{"version":3,"names":["CustomInput","CustomSelect","CustomFilterBtn","name","data","menuList","imgPath","description","backgroundColor","components","methods","addMark","universitiesCollection","ymaps","GeoObjectCollection","universitiesMarkConfig","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconColor","universitiesArr","coordinates","place","add","Placemark","balloonContent","map","geoObjects"],"sources":["/home/brulik/projects/hackaton_leti2/digital_students/src/components/MenuLeft.vue"],"sourcesContent":["<template>\n  <div class=\"menu\">\n      <div class=\"studyPlaceSelection\">\n          <p>Выберите место учебы:</p>\n          <CustomSelect />\n      </div>\n      <CustomInput />\n      <div class=\"filterBtns\">\n          <CustomFilterBtn @click=\"\" v-for=\"item in menuList\"\n            :imgPath=\"item.imgPath\"\n            :description=\"item.description\"\n            :backgroundColor=\"item.backgroundColor\"\n          >\n          </CustomFilterBtn>\n      </div>\n  </div>\n</template>\n\n<script>\nimport CustomInput from \"@/components/ui/CustomInput.vue\";\nimport CustomSelect from \"@/components/ui/CustomSelect.vue\";\nimport CustomFilterBtn from \"@/components/ui/CustomFilterBtn.vue\";\n\nexport default {\n  name: 'MenuLeft',\n    data() {\n      return {\n          menuList: [ \n            {\n              imgPath: '/menuImages/universImg.svg',\n              description: 'ВУЗы',\n              backgroundColor: 'rgb(183, 116, 245)',\n            },\n            {\n              imgPath: '/menuImages/kovorkingImg.svg',\n              description: 'Коворкинги',\n              backgroundColor: 'rgb(253, 253, 22)',\n            },\n            {\n              imgPath: '/menuImages/biblioteki.svg',\n              description: 'Библиотеки',\n              backgroundColor: 'rgb(105, 250, 255)',\n            },\n            {\n              imgPath: '/menuImages/kafe.svg',\n              description: 'Кафе',\n              backgroundColor: 'rgb(235, 125, 0)',\n            },\n          ]\n        }\n    },\n    components: {CustomFilterBtn, CustomSelect, CustomInput},\n    methods: {\n        addMark() {\n        let universitiesCollection = new ymaps.GeoObjectCollection(null);\n        let universitiesMarkConfig = {\n          iconLayout: 'default#image',\n          iconImageHref: '/placeMarks/purpleSVG.svg',\n          iconImageSize: [55, 55],\n          iconImageOffset: [-30, -40],\n          iconColor: '#ff0000'\n        }\n\n        let universitiesArr = [\n          {\n            name: \"ЛЭТИ\",\n            coordinates: [59.971942, 30.324294],\n          },\n          {\n            name: \"СПБГУ\",\n            coordinates: [59.941636, 30.299563],\n          },\n          {\n            name: \"БОНЧ\",\n            coordinates: [59.902821, 30.489175],\n          }\n        ];\n\n        for(let place of universitiesArr) {\n          universitiesCollection.add(new ymaps.Placemark(place.coordinates, {\n            balloonContent: place.name\n          }, universitiesMarkConfig))\n        }\n\n        // let myPlacemark = new ymaps.Placemark([59.971942, 30.324294],{\n        //   balloonContent: 'ЛЭТИ',\n        // }, universitiesMarkConfig)\n\n        map.geoObjects.add(universitiesCollection);\n      }\n    }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.menu, .filterBtns, .studyPlaceSelection {\n    display: flex;\n}\n\n  .menu {\n      flex-direction: column;\n      padding: 10px;\n  }\n\n  .filterBtns {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 25px;\n  }\n\n  .studyPlaceSelection {\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between;\n      margin: 5px;\n  }\n</style>\n"],"mappings":"AAmBA,OAAOA,WAAU,MAAO,iCAAiC;AACzD,OAAOC,YAAW,MAAO,kCAAkC;AAC3D,OAAOC,eAAc,MAAO,qCAAqC;AAEjE,eAAe;EACbC,IAAI,EAAE,UAAU;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACHC,QAAQ,EAAE,CACR;QACEC,OAAO,EAAE,4BAA4B;QACrCC,WAAW,EAAE,MAAM;QACnBC,eAAe,EAAE;MACnB,CAAC,EACD;QACEF,OAAO,EAAE,8BAA8B;QACvCC,WAAW,EAAE,YAAY;QACzBC,eAAe,EAAE;MACnB,CAAC,EACD;QACEF,OAAO,EAAE,4BAA4B;QACrCC,WAAW,EAAE,YAAY;QACzBC,eAAe,EAAE;MACnB,CAAC,EACD;QACEF,OAAO,EAAE,sBAAsB;QAC/BC,WAAW,EAAE,MAAM;QACnBC,eAAe,EAAE;MACnB,CAAC;IAEL;EACJ,CAAC;EACDC,UAAU,EAAE;IAACP,eAAe;IAAED,YAAY;IAAED;EAAW,CAAC;EACxDU,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAG;MACV,IAAIC,sBAAqB,GAAI,IAAIC,KAAK,CAACC,mBAAmB,CAAC,IAAI,CAAC;MAChE,IAAIC,sBAAqB,GAAI;QAC3BC,UAAU,EAAE,eAAe;QAC3BC,aAAa,EAAE,2BAA2B;QAC1CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvBC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QAC3BC,SAAS,EAAE;MACb;MAEA,IAAIC,eAAc,GAAI,CACpB;QACElB,IAAI,EAAE,MAAM;QACZmB,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS;MACpC,CAAC,EACD;QACEnB,IAAI,EAAE,OAAO;QACbmB,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS;MACpC,CAAC,EACD;QACEnB,IAAI,EAAE,MAAM;QACZmB,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS;MACpC,EACD;MAED,KAAI,IAAIC,KAAI,IAAKF,eAAe,EAAE;QAChCT,sBAAsB,CAACY,GAAG,CAAC,IAAIX,KAAK,CAACY,SAAS,CAACF,KAAK,CAACD,WAAW,EAAE;UAChEI,cAAc,EAAEH,KAAK,CAACpB;QACxB,CAAC,EAAEY,sBAAsB,CAAC;MAC5B;;MAEA;MACA;MACA;;MAEAY,GAAG,CAACC,UAAU,CAACJ,GAAG,CAACZ,sBAAsB,CAAC;IAC5C;EACF;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}